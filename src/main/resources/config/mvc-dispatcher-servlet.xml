<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    classpath:/org/springframework/context/config/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    classpath:/org/springframework/web/servlet/config/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/aop  
    classpath:/org/springframework/aop/config/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx 
    classpath:/org/springframework/transaction/config/spring-tx-3.2.xsd">

	<!-- 默认的注解映射的支持 -->
	<mvc:annotation-driven />
	<aop:aspectj-autoproxy />

	<context:component-scan base-package="com.mvc.func.*" />

	<!-- welcome page -->
	<mvc:view-controller path="/" view-name="index" />

	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/"
		cache-period="31536000" />

	<!-- Register the Customer.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="validatorProperties/message" />
	</bean>

	<!-- 避免IE在ajax请求时，返回json出现下载 -->
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- viewResolver,会在classpath找名为views.properties的文件 -->
	<bean id="viewResolverBundle"
		class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
		<property name="order" value="0" />
		<property name="basename" value="config/views" /><!-- 根据这个获取properties文件 -->
	</bean>

	<!-- freemarker config -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/pages/" />
		<!-- template file can exists one or more; but should use templateLoaderPaths 
			<property name="templateLoaderPaths"> <list> <value>/WEB-INF/pages/</value> 
			</list> </property> -->
		<property name="freemarkerSettings">
			<props>
				<!-- 每隔多长时间检查模板是否更新，单位为秒 设置时间过长，会造成开发的时候修改ftl页面不刷新 建议生产环境设置时间长一些 如果不经常更新模板可将更新的延迟时间设置的长一点，根据需要 -->
				<prop key="template_update_delay">0</prop>
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
				<prop key="boolean_format">true,false</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="date_format">yyyy-MM-DD</prop>
				<prop key="time_format">HH:mm:ss</prop>
				<prop key="number_format">0.######</prop>
				<prop key="whitespace_stripping">true</prop>
			</props>
		</property>
	</bean>

	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="order" value="1" />
	</bean>

	<bean id="viewResolverJsp"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/pages/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="2" />
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/interceptor/**" />
			<bean class="com.mvc.func.interceptor.MyInterfeptor" />
		</mvc:interceptor>
	</mvc:interceptors>

</beans>